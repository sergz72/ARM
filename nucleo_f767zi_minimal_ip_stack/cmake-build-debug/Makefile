# CMAKE generated file: DO NOT EDIT!
# Generated by "MinGW Makefiles" Generator, CMake Version 3.15

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Produce verbose output by default.
VERBOSE = 1

# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

SHELL = cmd.exe

# The CMake executable.
CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2018.3.4\bin\cmake\win\bin\cmake.exe"

# The command to remove a file.
RM = "C:\Program Files\JetBrains\CLion 2018.3.4\bin\cmake\win\bin\cmake.exe" -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = C:\serg\my\github\STM32\nucleo_f767zi_minimal_ip_stack

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = C:\serg\my\github\STM32\nucleo_f767zi_minimal_ip_stack\cmake-build-debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	"C:\Program Files\JetBrains\CLion 2018.3.4\bin\cmake\win\bin\cmake.exe" -E echo "No interactive CMake dialog available."
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	"C:\Program Files\JetBrains\CLion 2018.3.4\bin\cmake\win\bin\cmake.exe" -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start C:\serg\my\github\STM32\nucleo_f767zi_minimal_ip_stack\cmake-build-debug\CMakeFiles C:\serg\my\github\STM32\nucleo_f767zi_minimal_ip_stack\cmake-build-debug\CMakeFiles\progress.marks
	$(MAKE) -f CMakeFiles\Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start C:\serg\my\github\STM32\nucleo_f767zi_minimal_ip_stack\cmake-build-debug\CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) -f CMakeFiles\Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) -f CMakeFiles\Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) -f CMakeFiles\Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named nucleo_f767zi_ethernet.elf

# Build rule for target.
nucleo_f767zi_ethernet.elf: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 nucleo_f767zi_ethernet.elf
.PHONY : nucleo_f767zi_ethernet.elf

# fast build rule for target.
nucleo_f767zi_ethernet.elf/fast:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/build
.PHONY : nucleo_f767zi_ethernet.elf/fast

C_/serg/my/github/STM32/common_lib/queue.obj: C_/serg/my/github/STM32/common_lib/queue.c.obj

.PHONY : C_/serg/my/github/STM32/common_lib/queue.obj

# target to build an object file
C_/serg/my/github/STM32/common_lib/queue.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/common_lib/queue.c.obj
.PHONY : C_/serg/my/github/STM32/common_lib/queue.c.obj

C_/serg/my/github/STM32/common_lib/queue.i: C_/serg/my/github/STM32/common_lib/queue.c.i

.PHONY : C_/serg/my/github/STM32/common_lib/queue.i

# target to preprocess a source file
C_/serg/my/github/STM32/common_lib/queue.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/common_lib/queue.c.i
.PHONY : C_/serg/my/github/STM32/common_lib/queue.c.i

C_/serg/my/github/STM32/common_lib/queue.s: C_/serg/my/github/STM32/common_lib/queue.c.s

.PHONY : C_/serg/my/github/STM32/common_lib/queue.s

# target to generate assembly for a file
C_/serg/my/github/STM32/common_lib/queue.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/common_lib/queue.c.s
.PHONY : C_/serg/my/github/STM32/common_lib/queue.c.s

C_/serg/my/github/STM32/stm32f7lib/eth/eth.obj: C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.obj

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth.obj

# target to build an object file
C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.obj
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.obj

C_/serg/my/github/STM32/stm32f7lib/eth/eth.i: C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.i

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth.i

# target to preprocess a source file
C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.i
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.i

C_/serg/my/github/STM32/stm32f7lib/eth/eth.s: C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.s

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth.s

# target to generate assembly for a file
C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.s
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth.c.s

C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.obj: C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.obj

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.obj

# target to build an object file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.obj
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.obj

C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.i: C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.i

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.i

# target to preprocess a source file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.i
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.i

C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.s: C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.s

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.s

# target to generate assembly for a file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.s
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.c.s

C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.obj: C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.obj

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.obj

# target to build an object file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.obj
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.obj

C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.i: C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.i

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.i

# target to preprocess a source file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.i
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.i

C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.s: C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.s

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.s

# target to generate assembly for a file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.s
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.c.s

C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.obj: C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.obj

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.obj

# target to build an object file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.obj
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.obj

C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.i: C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.i

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.i

# target to preprocess a source file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.i
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.i

C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.s: C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.s

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.s

# target to generate assembly for a file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.s
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.c.s

C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.obj: C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.obj

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.obj

# target to build an object file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.obj
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.obj

C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.i: C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.i

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.i

# target to preprocess a source file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.i
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.i

C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.s: C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.s

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.s

# target to generate assembly for a file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.s
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.c.s

C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.obj: C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.obj

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.obj

# target to build an object file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.obj
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.obj

C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.i: C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.i

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.i

# target to preprocess a source file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.i
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.i

C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.s: C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.s

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.s

# target to generate assembly for a file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.s
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.c.s

C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.obj: C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.obj

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.obj

# target to build an object file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.obj
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.obj

C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.i: C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.i

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.i

# target to preprocess a source file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.i
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.i

C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.s: C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.s

.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.s

# target to generate assembly for a file
C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.s
.PHONY : C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.c.s

C_/serg/my/github/STM32/stm32f7lib/gpio.obj: C_/serg/my/github/STM32/stm32f7lib/gpio.c.obj

.PHONY : C_/serg/my/github/STM32/stm32f7lib/gpio.obj

# target to build an object file
C_/serg/my/github/STM32/stm32f7lib/gpio.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/gpio.c.obj
.PHONY : C_/serg/my/github/STM32/stm32f7lib/gpio.c.obj

C_/serg/my/github/STM32/stm32f7lib/gpio.i: C_/serg/my/github/STM32/stm32f7lib/gpio.c.i

.PHONY : C_/serg/my/github/STM32/stm32f7lib/gpio.i

# target to preprocess a source file
C_/serg/my/github/STM32/stm32f7lib/gpio.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/gpio.c.i
.PHONY : C_/serg/my/github/STM32/stm32f7lib/gpio.c.i

C_/serg/my/github/STM32/stm32f7lib/gpio.s: C_/serg/my/github/STM32/stm32f7lib/gpio.c.s

.PHONY : C_/serg/my/github/STM32/stm32f7lib/gpio.s

# target to generate assembly for a file
C_/serg/my/github/STM32/stm32f7lib/gpio.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/gpio.c.s
.PHONY : C_/serg/my/github/STM32/stm32f7lib/gpio.c.s

C_/serg/my/github/STM32/stm32f7lib/nvic.obj: C_/serg/my/github/STM32/stm32f7lib/nvic.c.obj

.PHONY : C_/serg/my/github/STM32/stm32f7lib/nvic.obj

# target to build an object file
C_/serg/my/github/STM32/stm32f7lib/nvic.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/nvic.c.obj
.PHONY : C_/serg/my/github/STM32/stm32f7lib/nvic.c.obj

C_/serg/my/github/STM32/stm32f7lib/nvic.i: C_/serg/my/github/STM32/stm32f7lib/nvic.c.i

.PHONY : C_/serg/my/github/STM32/stm32f7lib/nvic.i

# target to preprocess a source file
C_/serg/my/github/STM32/stm32f7lib/nvic.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/nvic.c.i
.PHONY : C_/serg/my/github/STM32/stm32f7lib/nvic.c.i

C_/serg/my/github/STM32/stm32f7lib/nvic.s: C_/serg/my/github/STM32/stm32f7lib/nvic.c.s

.PHONY : C_/serg/my/github/STM32/stm32f7lib/nvic.s

# target to generate assembly for a file
C_/serg/my/github/STM32/stm32f7lib/nvic.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/nvic.c.s
.PHONY : C_/serg/my/github/STM32/stm32f7lib/nvic.c.s

C_/serg/my/github/STM32/stm32f7lib/systick.obj: C_/serg/my/github/STM32/stm32f7lib/systick.c.obj

.PHONY : C_/serg/my/github/STM32/stm32f7lib/systick.obj

# target to build an object file
C_/serg/my/github/STM32/stm32f7lib/systick.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/systick.c.obj
.PHONY : C_/serg/my/github/STM32/stm32f7lib/systick.c.obj

C_/serg/my/github/STM32/stm32f7lib/systick.i: C_/serg/my/github/STM32/stm32f7lib/systick.c.i

.PHONY : C_/serg/my/github/STM32/stm32f7lib/systick.i

# target to preprocess a source file
C_/serg/my/github/STM32/stm32f7lib/systick.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/systick.c.i
.PHONY : C_/serg/my/github/STM32/stm32f7lib/systick.c.i

C_/serg/my/github/STM32/stm32f7lib/systick.s: C_/serg/my/github/STM32/stm32f7lib/systick.c.s

.PHONY : C_/serg/my/github/STM32/stm32f7lib/systick.s

# target to generate assembly for a file
C_/serg/my/github/STM32/stm32f7lib/systick.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/systick.c.s
.PHONY : C_/serg/my/github/STM32/stm32f7lib/systick.c.s

C_/serg/my/github/STM32/stm32f7lib/uart.obj: C_/serg/my/github/STM32/stm32f7lib/uart.c.obj

.PHONY : C_/serg/my/github/STM32/stm32f7lib/uart.obj

# target to build an object file
C_/serg/my/github/STM32/stm32f7lib/uart.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/uart.c.obj
.PHONY : C_/serg/my/github/STM32/stm32f7lib/uart.c.obj

C_/serg/my/github/STM32/stm32f7lib/uart.i: C_/serg/my/github/STM32/stm32f7lib/uart.c.i

.PHONY : C_/serg/my/github/STM32/stm32f7lib/uart.i

# target to preprocess a source file
C_/serg/my/github/STM32/stm32f7lib/uart.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/uart.c.i
.PHONY : C_/serg/my/github/STM32/stm32f7lib/uart.c.i

C_/serg/my/github/STM32/stm32f7lib/uart.s: C_/serg/my/github/STM32/stm32f7lib/uart.c.s

.PHONY : C_/serg/my/github/STM32/stm32f7lib/uart.s

# target to generate assembly for a file
C_/serg/my/github/STM32/stm32f7lib/uart.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/C_/serg/my/github/STM32/stm32f7lib/uart.c.s
.PHONY : C_/serg/my/github/STM32/stm32f7lib/uart.c.s

src/eth_handler.obj: src/eth_handler.c.obj

.PHONY : src/eth_handler.obj

# target to build an object file
src/eth_handler.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/eth_handler.c.obj
.PHONY : src/eth_handler.c.obj

src/eth_handler.i: src/eth_handler.c.i

.PHONY : src/eth_handler.i

# target to preprocess a source file
src/eth_handler.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/eth_handler.c.i
.PHONY : src/eth_handler.c.i

src/eth_handler.s: src/eth_handler.c.s

.PHONY : src/eth_handler.s

# target to generate assembly for a file
src/eth_handler.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/eth_handler.c.s
.PHONY : src/eth_handler.c.s

src/hal.obj: src/hal.c.obj

.PHONY : src/hal.obj

# target to build an object file
src/hal.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/hal.c.obj
.PHONY : src/hal.c.obj

src/hal.i: src/hal.c.i

.PHONY : src/hal.i

# target to preprocess a source file
src/hal.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/hal.c.i
.PHONY : src/hal.c.i

src/hal.s: src/hal.c.s

.PHONY : src/hal.s

# target to generate assembly for a file
src/hal.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/hal.c.s
.PHONY : src/hal.c.s

src/main.obj: src/main.c.obj

.PHONY : src/main.obj

# target to build an object file
src/main.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/main.c.obj
.PHONY : src/main.c.obj

src/main.i: src/main.c.i

.PHONY : src/main.i

# target to preprocess a source file
src/main.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/main.c.i
.PHONY : src/main.c.i

src/main.s: src/main.c.s

.PHONY : src/main.s

# target to generate assembly for a file
src/main.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/main.c.s
.PHONY : src/main.c.s

src/startup_stm32f767xx.obj: src/startup_stm32f767xx.s.obj

.PHONY : src/startup_stm32f767xx.obj

# target to build an object file
src/startup_stm32f767xx.s.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/startup_stm32f767xx.s.obj
.PHONY : src/startup_stm32f767xx.s.obj

src/system_init.obj: src/system_init.c.obj

.PHONY : src/system_init.obj

# target to build an object file
src/system_init.c.obj:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/system_init.c.obj
.PHONY : src/system_init.c.obj

src/system_init.i: src/system_init.c.i

.PHONY : src/system_init.i

# target to preprocess a source file
src/system_init.c.i:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/system_init.c.i
.PHONY : src/system_init.c.i

src/system_init.s: src/system_init.c.s

.PHONY : src/system_init.s

# target to generate assembly for a file
src/system_init.c.s:
	$(MAKE) -f CMakeFiles\nucleo_f767zi_ethernet.elf.dir\build.make CMakeFiles/nucleo_f767zi_ethernet.elf.dir/src/system_init.c.s
.PHONY : src/system_init.c.s

# Help Target
help:
	@echo The following are some of the valid targets for this Makefile:
	@echo ... all (the default if no target is provided)
	@echo ... clean
	@echo ... depend
	@echo ... nucleo_f767zi_ethernet.elf
	@echo ... edit_cache
	@echo ... rebuild_cache
	@echo ... C_/serg/my/github/STM32/common_lib/queue.obj
	@echo ... C_/serg/my/github/STM32/common_lib/queue.i
	@echo ... C_/serg/my/github/STM32/common_lib/queue.s
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth.obj
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth.i
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth.s
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.obj
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.i
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_arp.s
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.obj
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.i
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_callbacks.s
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.obj
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.i
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_icmp.s
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.obj
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.i
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_ipv4.s
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.obj
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.i
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_queue.s
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.obj
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.i
	@echo ... C_/serg/my/github/STM32/stm32f7lib/eth/eth_udp.s
	@echo ... C_/serg/my/github/STM32/stm32f7lib/gpio.obj
	@echo ... C_/serg/my/github/STM32/stm32f7lib/gpio.i
	@echo ... C_/serg/my/github/STM32/stm32f7lib/gpio.s
	@echo ... C_/serg/my/github/STM32/stm32f7lib/nvic.obj
	@echo ... C_/serg/my/github/STM32/stm32f7lib/nvic.i
	@echo ... C_/serg/my/github/STM32/stm32f7lib/nvic.s
	@echo ... C_/serg/my/github/STM32/stm32f7lib/systick.obj
	@echo ... C_/serg/my/github/STM32/stm32f7lib/systick.i
	@echo ... C_/serg/my/github/STM32/stm32f7lib/systick.s
	@echo ... C_/serg/my/github/STM32/stm32f7lib/uart.obj
	@echo ... C_/serg/my/github/STM32/stm32f7lib/uart.i
	@echo ... C_/serg/my/github/STM32/stm32f7lib/uart.s
	@echo ... src/eth_handler.obj
	@echo ... src/eth_handler.i
	@echo ... src/eth_handler.s
	@echo ... src/hal.obj
	@echo ... src/hal.i
	@echo ... src/hal.s
	@echo ... src/main.obj
	@echo ... src/main.i
	@echo ... src/main.s
	@echo ... src/startup_stm32f767xx.obj
	@echo ... src/system_init.obj
	@echo ... src/system_init.i
	@echo ... src/system_init.s
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
.PHONY : cmake_check_build_system

